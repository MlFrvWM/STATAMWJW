local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/MlFrvWM/BBLT81/main/BL81827TC", true))()

local window = library:AddWindow("1987 Private", {
    main_color = Color3.fromRGB(0, 0, 0),
    min_size = Vector2.new(740, 500),
    can_resize = false,
})

local function setFontRecursive(guiObject, font)
    for _, obj in pairs(guiObject:GetDescendants()) do
        if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("TextBox") then
            obj.Font = font
        end
    end
end

spawn(function()
    repeat wait() until window.gui
    setFontRecursive(window.gui, Enum.Font.SourceSansBold)
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function abbreviateNumber(n)
	local suffixes = {"", "K", "M", "B", "T", "Qa", "Qi", "Sx", "Sp", "Oc", "No", "Dc"}
	local i = 1
	while n >= 1000 and i < #suffixes do
		n = n / 1000
		i = i + 1
	end
	return string.format("%.2f%s", n, suffixes[i])
end

local viewTab = window:AddTab("View Status")

local selectedPlayer = nil
local playerDropdown = viewTab:AddDropdown("Select Player", function(selected)
	local player = Players:FindFirstChild(selected)
	selectedPlayer = player or nil
end)

local statusLabel = viewTab:AddLabel("Waiting for selection...")

local function formatStat(label, value)
	return label .. ": " .. tostring(value) .. " (" .. abbreviateNumber(value) .. ")"
end

local function updateStatus(player)
	if not player then return end

	local stats = {
		Strength = 0,
		Durability = 0,
		Agility = 0,
		Rebirths = 0,
		Kills = 0,
		BaseDurability = 0,
		UltimateBoost = 0,
		PetBoost = 0,
		BaseDamage = 0,
		PetDamage = 0,
	}

	local leaderstats = player:FindFirstChild("leaderstats")
	if leaderstats then
		stats.Strength = leaderstats:FindFirstChild("Strength") and leaderstats.Strength.Value or 0
		stats.Durability = leaderstats:FindFirstChild("Durability") and leaderstats.Durability.Value or 0
		stats.Agility = leaderstats:FindFirstChild("Agility") and leaderstats.Agility.Value or 0
		stats.Rebirths = leaderstats:FindFirstChild("Rebirths") and leaderstats.Rebirths.Value or 0
		stats.Kills = leaderstats:FindFirstChild("Kills") and leaderstats.Kills.Value or 0
	end

	local advStats = player:FindFirstChild("AdvancedStats")
	if advStats then
		stats.BaseDurability = advStats:FindFirstChild("BaseDurability") and advStats.BaseDurability.Value or 0
		stats.UltimateBoost = advStats:FindFirstChild("UltimateBoost") and advStats.UltimateBoost.Value or 0
		stats.PetBoost = advStats:FindFirstChild("PetBoost") and advStats.PetBoost.Value or 0
		stats.BaseDamage = advStats:FindFirstChild("BaseDamage") and advStats.BaseDamage.Value or 0
		stats.PetDamage = advStats:FindFirstChild("PetDamage") and advStats.PetDamage.Value or 0
	end

	local myStats = {
		BaseDamage = 0,
		PetDamage = 0
	}

	local myAdv = LocalPlayer:FindFirstChild("AdvancedStats")
	if myAdv then
		myStats.BaseDamage = myAdv:FindFirstChild("BaseDamage") and myAdv.BaseDamage.Value or 0
		myStats.PetDamage = myAdv:FindFirstChild("PetDamage") and myAdv.PetDamage.Value or 0
	end

	local myDamage = math.max(myStats.BaseDamage, myStats.PetDamage)
	local enemyHP = stats.BaseDurability
	local hitsToKill = myDamage > 0 and math.ceil(enemyHP / myDamage) or "N/A"
	local timeToKill = myDamage > 0 and string.format("%.2fs", hitsToKill * 0.15) or "N/A"
	local totalDurability = stats.BaseDurability
	local totalDamage = math.max(stats.BaseDamage, stats.PetDamage)

	local infoText = "[View Status]\n\n" ..
		formatStat("Strength", stats.Strength) .. "\n" ..
		formatStat("Durability", stats.Durability) .. "\n" ..
		formatStat("Agility", stats.Agility) .. "\n" ..
		"Rebirths: " .. stats.Rebirths .. "\n" ..
		"Kills: " .. stats.Kills .. "\n\n" ..
		"--- Advanced Stats ---\n" ..
		formatStat("Base Durability", stats.BaseDurability) .. "\n" ..
		"Ultimate Boost: +" .. stats.UltimateBoost .. "%\n" ..
		"Pet Boost: +" .. stats.PetBoost .. "%\n" ..
		formatStat("TOTAL DURABILITY", totalDurability) .. "\n" ..
		"Enemy Base Damage: " .. tostring(stats.BaseDamage) .. "\n" ..
		"Enemy Pet Damage: " .. tostring(stats.PetDamage) .. "\n" ..
		"Hits to Kill: " .. hitsToKill .. "\n" ..
		"Time to Kill: " .. timeToKill

	statusLabel.Text = infoText
end

for _, plr in ipairs(Players:GetPlayers()) do
	playerDropdown:Add(plr.Name)
end

Players.PlayerAdded:Connect(function(plr)
	playerDropdown:Add(plr.Name)
end)

Players.PlayerRemoving:Connect(function(plr)
	playerDropdown:Remove(plr.Name)
end)

task.spawn(function()
	while true do
		task.wait(1)
		if selectedPlayer then
			updateStatus(selectedPlayer)
		end
	end
end)
