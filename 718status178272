local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/MlFrvWM/BBLT81/main/BL81827TC", true))()

local window = library:AddWindow("1987 Private", {
    main_color = Color3.fromRGB(117, 6, 29),
    min_size = Vector2.new(740, 500),
    can_resize = false,
})

local function setFontRecursive(guiObject, font)
    for _, obj in pairs(guiObject:GetDescendants()) do
        if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("TextBox") then
            obj.Font = font
        end
    end
end

spawn(function()
    repeat wait() until window.gui
    setFontRecursive(window.gui, Enum.Font.SourceSansBold)
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function abbreviateNumber(n)
    local suffixes = {"", "K", "M", "B", "T", "Qa", "Qi", "Sx", "Sp", "Oc", "No", "Dc"}
    local i = 1
    while n >= 1000 and i < #suffixes do
        n = n / 1000
        i = i + 1
    end
    return string.format("%.2f%s", n, suffixes[i])
end

local viewTab = window:AddTab("View Status", 4483362458)

local playerDropdown
local statusLabel

local function getPlayerStats(player)
    local stats = {
        DisplayName = player.DisplayName,
        Username = player.Name,
        Strength = 0,
        Durability = 0,
        Agility = 0,
        Rebirths = 0,
        Kills = 0,
        BaseDurability = 0,
        UltimateBoost = 0,
        PetBoost = 0,
        BaseDamage = 0,
        PetDamage = 0,
    }

    local statsFolder = player:FindFirstChild("leaderstats")
    if statsFolder then
        stats.Strength = statsFolder:FindFirstChild("Strength") and statsFolder.Strength.Value or 0
        stats.Durability = statsFolder:FindFirstChild("Durability") and statsFolder.Durability.Value or 0
        stats.Agility = statsFolder:FindFirstChild("Agility") and statsFolder.Agility.Value or 0
        stats.Rebirths = statsFolder:FindFirstChild("Rebirths") and statsFolder.Rebirths.Value or 0
        stats.Kills = statsFolder:FindFirstChild("Kills") and statsFolder.Kills.Value or 0
    end

    local advanced = player:FindFirstChild("AdvancedStats") or player
    stats.BaseDurability = advanced:FindFirstChild("BaseDurability") and advanced.BaseDurability.Value or 0
    stats.UltimateBoost = advanced:FindFirstChild("UltimateBoost") and advanced.UltimateBoost.Value or 0
    stats.PetBoost = advanced:FindFirstChild("PetBoost") and advanced.PetBoost.Value or 0
    stats.BaseDamage = advanced:FindFirstChild("BaseDamage") and advanced.BaseDamage.Value or 0
    stats.PetDamage = advanced:FindFirstChild("PetDamage") and advanced.PetDamage.Value or 0

    return stats
end

local function formatStat(label, value)
    return label .. ": " .. tostring(value) .. " (" .. abbreviateNumber(value) .. ")"
end

local function updateStatus(player)
    if not player then return end
    local s = getPlayerStats(player)

    local totalDurability = s.BaseDurability
    local totalDamage = s.PetDamage > s.BaseDamage and s.PetDamage or s.BaseDamage

    statusLabel:Set(
        "Displayname: " .. s.DisplayName ..
        "\nUsername: " .. s.Username ..
        "\n" .. formatStat("Strength", s.Strength) ..
        "\n" .. formatStat("Durability", s.Durability) ..
        "\n" .. formatStat("Agility", s.Agility) ..
        "\nRebirths: " .. s.Rebirths ..
        "\nKills: " .. s.Kills ..
        "\n\n------------------------" ..
        "\n<font size='20' color='rgb(0,255,255)'>Advanced Stats</font>" ..
        "\n" .. formatStat("Base Durability", s.BaseDurability) ..
        "\nUltimate Boost: " .. s.UltimateBoost .. " (+" .. s.UltimateBoost .. "%)" ..
        "\nPet Boost: " .. s.PetBoost .. " (+" .. s.PetBoost .. "%)" ..
        "\n" .. formatStat("TOTAL DURABILITY", totalDurability) ..
        "\n" .. formatStat("Your Base Damage", s.BaseDamage) ..
        "\n" .. formatStat("With Your Pets", s.PetDamage) ..
        "\nHits to Kill: N/A" ..
        "\nTime to Kill: N/A"
    )
end

playerDropdown = viewTab:CreateDropdown("Select Player", function(selected)
    local target = Players:FindFirstChild(selected)
    updateStatus(target)
end)

statusLabel = viewTab:CreateLabel("Select a player to view status")

for _, plr in pairs(Players:GetPlayers()) do
    playerDropdown:Add(plr.Name)
end

Players.PlayerAdded:Connect(function(plr)
    playerDropdown:Add(plr.Name)
end)

Players.PlayerRemoving:Connect(function(plr)
    playerDropdown:Remove(plr.Name)
end)
